syntax = "proto3";

package envoy.extensions.certificate_providers.local_certificate.v3;

import "envoy/config/core/v3/base.proto";

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

import "udpa/annotations/status.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.certificate_providers.local_certificate.v3";
option java_outer_classname = "LocalCertificateProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/certificate_providers/local_certificate/v3;local_certificatev3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Local Certificate Provider]

// [#extension: envoy.certificate_providers.local_certificate]
// [#next-free-field: 8]
message LocalCertificate {
  enum Pkey {
    UNSPECIFIED = 0;
    RSA_2048 = 1;
    RSA_3072 = 2;
    RSA_4096 = 3;
    ECDSA_P256 = 4;
  }

  // Key and cert of root ca used to sign certificates.
  config.core.v3.DataSource rootca_cert = 1;

  config.core.v3.DataSource rootca_key = 2;

  // Default Identity key and cert used for TLS handshake
  config.core.v3.DataSource default_identity_cert = 3;

  config.core.v3.DataSource default_identity_key = 4;

  // Indicates the time at which the certificate expires.
  google.protobuf.Timestamp expiration_time = 5;

  // The pkey type and size. If not specified, the type/size of original server cert will be copied.
  // It supports RSA_2048, RSA_3072, RSA_4096, ECDSA_P256. Otherwise, defaults to RSA_2048.
  Pkey pkey = 6;

  // The maximum number of hosts that the cache will hold. If not specified defaults to 1024.
  google.protobuf.UInt32Value cache_size = 7 [(validate.rules).uint32 = {gt: 0}];
}
